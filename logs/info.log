INFO:0.0 ns:Stack.Host(Alice_host):num pending: 1
INFO:0.0 ns:Stack.Host(Bob_host):num pending: 1
INFO:0.0 ns:Stack.Host(Charlie_host):num pending: 1
INFO:0.0 ns:Stack.Host(David_host):num pending: 1
INFO:0.0 ns:Stack.Host(Edna_host):num pending: 1
INFO:0.0 ns:Stack.Host(Frank_host):num pending: 1
INFO:0.0 ns:Stack.Alice program:Alice has index 0
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () create_epr(1,0) 1 2 0
   7    () wait_all @0[0:10]
   8    () ret_arr @0
   9    () ret_arr @1
  10    () ret_arr @2

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 1
  16    () set R1 0
  17    () set R2 1
  18    () set R3 2
  19    () set R4 0
  20    () create_epr R0 R1 R2 R3 R4
  21    () set R0 0
  22    () set R1 10
  23    () wait_all @0[R0:R1]
  24    () ret_arr @0
  25    () ret_arr @1
  26    () ret_arr @2

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 1
  16    () set R1 0
  17    () set R2 1
  18    () set R3 2
  19    () set R4 0
  20    () create_epr R0 R1 R2 R3 R4
  21    () set R0 0
  22    () set R1 10
  23    () wait_all @0[R0:R1]
  24    () ret_arr @0
  25    () ret_arr @1
  26    () ret_arr @2

INFO:0.0 ns:Stack.Bob program:Bob has index 1
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.Bob program:Bob performs entanglement swap
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () array 10 @3
   7    () array 1 @4
   8    () store 1 @4[0]
   9    () array 1 @5
  10    () array 1 @6
  11    () create_epr(2,0) 1 2 0
  12    () wait_all @0[0:10]
  13    () recv_epr(0,1) 4 3
  14    () wait_all @3[0:10]
  15    () set R2 0
  16    () LOOP1:
  17    () beq R2 1 LOOP_EXIT1
  18    () load R0 @4[R2]
  19    () set R3 9
  20    () set R4 0
  21    () LOOP:
  22    () beq R4 R2 LOOP_EXIT
  23    () add R3 R3 10
  24    () add R4 R4 1
  25    () jmp LOOP
  26    () LOOP_EXIT:
  27    () load R1 @3[R3]
  28    () set R0 0
  29    () bne R1 3 IF_EXIT
  30    () rot_z R0 16 4
  31    () IF_EXIT:
  32    () bne R1 1 IF_EXIT1
  33    () rot_x R0 16 4
  34    () IF_EXIT1:
  35    () bne R1 2 IF_EXIT2
  36    () rot_x R0 16 4
  37    () rot_z R0 16 4
  38    () IF_EXIT2:
  39    () add R2 R2 1
  40    () jmp LOOP1
  41    () LOOP_EXIT1:
  42    () set Q0 1
  43    () set Q1 0
  44    () cnot Q0 Q1
  45    () set Q0 1
  46    () h Q0
  47    () set Q0 1
  48    () meas Q0 M0
  49    () qfree Q0
  50    () store M0 @5[0]
  51    () set Q0 0
  52    () meas Q0 M0
  53    () qfree Q0
  54    () store M0 @6[0]
  55    () ret_arr @0
  56    () ret_arr @1
  57    () ret_arr @2
  58    () ret_arr @3
  59    () ret_arr @4
  60    () ret_arr @5
  61    () ret_arr @6

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 1
  23    () array R5 @5
  24    () set R5 1
  25    () array R5 @6
  26    () set R5 2
  27    () set R6 0
  28    () set R7 1
  29    () set R8 2
  30    () set R9 0
  31    () create_epr R5 R6 R7 R8 R9
  32    () set R5 0
  33    () set R6 10
  34    () wait_all @0[R5:R6]
  35    () set R5 0
  36    () set R6 1
  37    () set R7 4
  38    () set R8 3
  39    () recv_epr R5 R6 R7 R8
  40    () set R5 0
  41    () set R6 10
  42    () wait_all @3[R5:R6]
  43    () set R2 0
  44    () set R5 1
  45    () beq R2 R5 70
  46    () load R0 @4[R2]
  47    () set R3 9
  48    () set R4 0
  49    () beq R4 R2 55
  50    () set R5 10
  51    () add R3 R3 R5
  52    () set R5 1
  53    () add R4 R4 R5
  54    () jmp 49
  55    () load R1 @3[R3]
  56    () set R0 0
  57    () set R5 3
  58    () bne R1 R5 60
  59    () rot_z R0 16 4
  60    () set R5 1
  61    () bne R1 R5 63
  62    () rot_x R0 16 4
  63    () set R5 2
  64    () bne R1 R5 67
  65    () rot_x R0 16 4
  66    () rot_z R0 16 4
  67    () set R5 1
  68    () add R2 R2 R5
  69    () jmp 44
  70    () set Q0 1
  71    () set Q1 0
  72    () cnot Q0 Q1
  73    () set Q0 1
  74    () h Q0
  75    () set Q0 1
  76    () meas Q0 M0
  77    () qfree Q0
  78    () set R5 0
  79    () store M0 @5[R5]
  80    () set Q0 0
  81    () meas Q0 M0
  82    () qfree Q0
  83    () set R5 0
  84    () store M0 @6[R5]
  85    () ret_arr @0
  86    () ret_arr @1
  87    () ret_arr @2
  88    () ret_arr @3
  89    () ret_arr @4
  90    () ret_arr @5
  91    () ret_arr @6

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 1
  23    () array R5 @5
  24    () set R5 1
  25    () array R5 @6
  26    () set R5 2
  27    () set R6 0
  28    () set R7 1
  29    () set R8 2
  30    () set R9 0
  31    () create_epr R5 R6 R7 R8 R9
  32    () set R5 0
  33    () set R6 10
  34    () wait_all @0[R5:R6]
  35    () set R5 0
  36    () set R6 1
  37    () set R7 4
  38    () set R8 3
  39    () recv_epr R5 R6 R7 R8
  40    () set R5 0
  41    () set R6 10
  42    () wait_all @3[R5:R6]
  43    () set R2 0
  44    () set R5 1
  45    () beq R2 R5 70
  46    () load R0 @4[R2]
  47    () set R3 9
  48    () set R4 0
  49    () beq R4 R2 55
  50    () set R5 10
  51    () add R3 R3 R5
  52    () set R5 1
  53    () add R4 R4 R5
  54    () jmp 49
  55    () load R1 @3[R3]
  56    () set R0 0
  57    () set R5 3
  58    () bne R1 R5 60
  59    () rot_z R0 16 4
  60    () set R5 1
  61    () bne R1 R5 63
  62    () rot_x R0 16 4
  63    () set R5 2
  64    () bne R1 R5 67
  65    () rot_x R0 16 4
  66    () rot_z R0 16 4
  67    () set R5 1
  68    () add R2 R2 R5
  69    () jmp 44
  70    () set Q0 1
  71    () set Q1 0
  72    () cnot Q0 Q1
  73    () set Q0 1
  74    () h Q0
  75    () set Q0 1
  76    () meas Q0 M0
  77    () qfree Q0
  78    () set R5 0
  79    () store M0 @5[R5]
  80    () set Q0 0
  81    () meas Q0 M0
  82    () qfree Q0
  83    () set R5 0
  84    () store M0 @6[R5]
  85    () ret_arr @0
  86    () ret_arr @1
  87    () ret_arr @2
  88    () ret_arr @3
  89    () ret_arr @4
  90    () ret_arr @5
  91    () ret_arr @6

INFO:0.0 ns:Stack.Charlie program:Charlie has index 2
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () array 10 @3
   7    () array 1 @4
   8    () store 1 @4[0]
   9    () create_epr(3,0) 1 2 0
  10    () wait_all @0[0:10]
  11    () recv_epr(1,1) 4 3
  12    () wait_all @3[0:10]
  13    () set R2 0
  14    () LOOP1:
  15    () beq R2 1 LOOP_EXIT1
  16    () load R0 @4[R2]
  17    () set R3 9
  18    () set R4 0
  19    () LOOP:
  20    () beq R4 R2 LOOP_EXIT
  21    () add R3 R3 10
  22    () add R4 R4 1
  23    () jmp LOOP
  24    () LOOP_EXIT:
  25    () load R1 @3[R3]
  26    () set R0 0
  27    () bne R1 3 IF_EXIT
  28    () rot_z R0 16 4
  29    () IF_EXIT:
  30    () bne R1 1 IF_EXIT1
  31    () rot_x R0 16 4
  32    () IF_EXIT1:
  33    () bne R1 2 IF_EXIT2
  34    () rot_x R0 16 4
  35    () rot_z R0 16 4
  36    () IF_EXIT2:
  37    () add R2 R2 1
  38    () jmp LOOP1
  39    () LOOP_EXIT1:
  40    () ret_arr @0
  41    () ret_arr @1
  42    () ret_arr @2
  43    () ret_arr @3
  44    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 3
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 1
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 3
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 1
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.David program:David has index 3
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () array 10 @3
   7    () array 1 @4
   8    () store 1 @4[0]
   9    () create_epr(4,0) 1 2 0
  10    () wait_all @0[0:10]
  11    () recv_epr(2,1) 4 3
  12    () wait_all @3[0:10]
  13    () set R2 0
  14    () LOOP1:
  15    () beq R2 1 LOOP_EXIT1
  16    () load R0 @4[R2]
  17    () set R3 9
  18    () set R4 0
  19    () LOOP:
  20    () beq R4 R2 LOOP_EXIT
  21    () add R3 R3 10
  22    () add R4 R4 1
  23    () jmp LOOP
  24    () LOOP_EXIT:
  25    () load R1 @3[R3]
  26    () set R0 0
  27    () bne R1 3 IF_EXIT
  28    () rot_z R0 16 4
  29    () IF_EXIT:
  30    () bne R1 1 IF_EXIT1
  31    () rot_x R0 16 4
  32    () IF_EXIT1:
  33    () bne R1 2 IF_EXIT2
  34    () rot_x R0 16 4
  35    () rot_z R0 16 4
  36    () IF_EXIT2:
  37    () add R2 R2 1
  38    () jmp LOOP1
  39    () LOOP_EXIT1:
  40    () ret_arr @0
  41    () ret_arr @1
  42    () ret_arr @2
  43    () ret_arr @3
  44    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 4
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 2
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 4
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 2
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.Edna program:Edna has index 4
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () array 10 @3
   7    () array 1 @4
   8    () store 1 @4[0]
   9    () create_epr(5,0) 1 2 0
  10    () wait_all @0[0:10]
  11    () recv_epr(3,1) 4 3
  12    () wait_all @3[0:10]
  13    () set R2 0
  14    () LOOP1:
  15    () beq R2 1 LOOP_EXIT1
  16    () load R0 @4[R2]
  17    () set R3 9
  18    () set R4 0
  19    () LOOP:
  20    () beq R4 R2 LOOP_EXIT
  21    () add R3 R3 10
  22    () add R4 R4 1
  23    () jmp LOOP
  24    () LOOP_EXIT:
  25    () load R1 @3[R3]
  26    () set R0 0
  27    () bne R1 3 IF_EXIT
  28    () rot_z R0 16 4
  29    () IF_EXIT:
  30    () bne R1 1 IF_EXIT1
  31    () rot_x R0 16 4
  32    () IF_EXIT1:
  33    () bne R1 2 IF_EXIT2
  34    () rot_x R0 16 4
  35    () rot_z R0 16 4
  36    () IF_EXIT2:
  37    () add R2 R2 1
  38    () jmp LOOP1
  39    () LOOP_EXIT1:
  40    () ret_arr @0
  41    () ret_arr @1
  42    () ret_arr @2
  43    () ret_arr @3
  44    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 5
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 3
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 20
   8    () array R5 @2
   9    () set R5 0
  10    () set R6 0
  11    () store R5 @2[R6]
  12    () set R5 1
  13    () set R6 1
  14    () store R5 @2[R6]
  15    () set R5 10
  16    () array R5 @3
  17    () set R5 1
  18    () array R5 @4
  19    () set R5 1
  20    () set R6 0
  21    () store R5 @4[R6]
  22    () set R5 5
  23    () set R6 0
  24    () set R7 1
  25    () set R8 2
  26    () set R9 0
  27    () create_epr R5 R6 R7 R8 R9
  28    () set R5 0
  29    () set R6 10
  30    () wait_all @0[R5:R6]
  31    () set R5 3
  32    () set R6 1
  33    () set R7 4
  34    () set R8 3
  35    () recv_epr R5 R6 R7 R8
  36    () set R5 0
  37    () set R6 10
  38    () wait_all @3[R5:R6]
  39    () set R2 0
  40    () set R5 1
  41    () beq R2 R5 66
  42    () load R0 @4[R2]
  43    () set R3 9
  44    () set R4 0
  45    () beq R4 R2 51
  46    () set R5 10
  47    () add R3 R3 R5
  48    () set R5 1
  49    () add R4 R4 R5
  50    () jmp 45
  51    () load R1 @3[R3]
  52    () set R0 0
  53    () set R5 3
  54    () bne R1 R5 56
  55    () rot_z R0 16 4
  56    () set R5 1
  57    () bne R1 R5 59
  58    () rot_x R0 16 4
  59    () set R5 2
  60    () bne R1 R5 63
  61    () rot_x R0 16 4
  62    () rot_z R0 16 4
  63    () set R5 1
  64    () add R2 R2 R5
  65    () jmp 40
  66    () ret_arr @0
  67    () ret_arr @1
  68    () ret_arr @2
  69    () ret_arr @3
  70    () ret_arr @4

INFO:0.0 ns:Stack.Frank program:Frank has index 5
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):wait_all = True
INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () recv_epr(4,0) 1 0
   4    () wait_all @0[0:10]
   5    () set R2 0
   6    () LOOP1:
   7    () beq R2 1 LOOP_EXIT1
   8    () load R0 @1[R2]
   9    () set R3 9
  10    () set R4 0
  11    () LOOP:
  12    () beq R4 R2 LOOP_EXIT
  13    () add R3 R3 10
  14    () add R4 R4 1
  15    () jmp LOOP
  16    () LOOP_EXIT:
  17    () load R1 @0[R3]
  18    () set R0 0
  19    () bne R1 3 IF_EXIT
  20    () rot_z R0 16 4
  21    () IF_EXIT:
  22    () bne R1 1 IF_EXIT1
  23    () rot_x R0 16 4
  24    () IF_EXIT1:
  25    () bne R1 2 IF_EXIT2
  26    () rot_x R0 16 4
  27    () rot_z R0 16 4
  28    () IF_EXIT2:
  29    () add R2 R2 1
  30    () jmp LOOP1
  31    () LOOP_EXIT1:
  32    () ret_arr @0
  33    () ret_arr @1

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 4
   8    () set R6 0
   9    () set R7 1
  10    () set R8 0
  11    () recv_epr R5 R6 R7 R8
  12    () set R5 0
  13    () set R6 10
  14    () wait_all @0[R5:R6]
  15    () set R2 0
  16    () set R5 1
  17    () beq R2 R5 42
  18    () load R0 @1[R2]
  19    () set R3 9
  20    () set R4 0
  21    () beq R4 R2 27
  22    () set R5 10
  23    () add R3 R3 R5
  24    () set R5 1
  25    () add R4 R4 R5
  26    () jmp 21
  27    () load R1 @0[R3]
  28    () set R0 0
  29    () set R5 3
  30    () bne R1 R5 32
  31    () rot_z R0 16 4
  32    () set R5 1
  33    () bne R1 R5 35
  34    () rot_x R0 16 4
  35    () set R5 2
  36    () bne R1 R5 39
  37    () rot_x R0 16 4
  38    () rot_z R0 16 4
  39    () set R5 1
  40    () add R2 R2 R5
  41    () jmp 16
  42    () ret_arr @0
  43    () ret_arr @1

INFO:0.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R5 10
   1    () array R5 @0
   2    () set R5 1
   3    () array R5 @1
   4    () set R5 0
   5    () set R6 0
   6    () store R5 @1[R6]
   7    () set R5 4
   8    () set R6 0
   9    () set R7 1
  10    () set R8 0
  11    () recv_epr R5 R6 R7 R8
  12    () set R5 0
  13    () set R6 10
  14    () wait_all @0[R5:R6]
  15    () set R2 0
  16    () set R5 1
  17    () beq R2 R5 42
  18    () load R0 @1[R2]
  19    () set R3 9
  20    () set R4 0
  21    () beq R4 R2 27
  22    () set R5 10
  23    () add R3 R3 R5
  24    () set R5 1
  25    () add R4 R4 R5
  26    () jmp 21
  27    () load R1 @0[R3]
  28    () set R0 0
  29    () set R5 3
  30    () bne R1 R5 32
  31    () rot_z R0 16 4
  32    () set R5 1
  33    () bne R1 R5 35
  34    () rot_x R0 16 4
  35    () set R5 2
  36    () bne R1 R5 39
  37    () rot_x R0 16 4
  38    () rot_z R0 16 4
  39    () set R5 1
  40    () add R2 R2 R5
  41    () jmp 16
  42    () ret_arr @0
  43    () ret_arr @1

INFO:0.0 ns:Stack.Netstack(Frank_netstack):putting CK request to EGP for 1 pairs
INFO:0.0 ns:Stack.Netstack(Frank_netstack):splitting request into 1 1-pair requests
INFO:0.0 ns:Stack.Netstack(Frank_netstack):trying to allocate comm qubit for pair 0
INFO:0.0 ns:Stack.Netstack(Frank_netstack):putting CK request for pair 0
INFO:0.0 ns:Stack.Netstack(Frank_netstack):waiting for result for pair 0
INFO:0.0 ns:Stack.Netstack(Edna_netstack):putting CK request to EGP for 1 pairs
INFO:0.0 ns:Stack.Netstack(Edna_netstack):qubit IDs specified by application: [0]
INFO:0.0 ns:Stack.Netstack(Edna_netstack):splitting request into 1 1-pair requests
INFO:0.0 ns:Stack.Netstack(Edna_netstack):trying to allocate comm qubit for pair 0
INFO:0.0 ns:Stack.Netstack(Edna_netstack):putting CK request for pair 0
INFO:0.0 ns:Stack.Netstack(Edna_netstack):waiting for result for pair 0
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=5, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=1000.0)
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):gen duration (us): 1
INFO:1000.0 ns:Stack.Netstack(Frank_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=4, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=1000.0)
INFO:1000.0 ns:Stack.Netstack(Frank_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:1000.0 ns:Stack.Netstack(Frank_netstack):gen duration (us): 1
INFO:1000.0 ns:Stack.GenericProcessor(Edna_processor):
Finished waiting for array slice @0[R5:R6]
INFO:1000.0 ns:Stack.GenericProcessor(Frank_processor):
Finished waiting for array slice @0[R5:R6]
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):putting CK request to EGP for 1 pairs
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):splitting request into 1 1-pair requests
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):trying to allocate comm qubit for pair 0
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):putting CK request for pair 0
INFO:1000.0 ns:Stack.Netstack(Edna_netstack):waiting for result for pair 0
INFO:1000.0 ns:Stack.Netstack(David_netstack):putting CK request to EGP for 1 pairs
INFO:1000.0 ns:Stack.Netstack(David_netstack):qubit IDs specified by application: [0]
INFO:1000.0 ns:Stack.Netstack(David_netstack):splitting request into 1 1-pair requests
INFO:1000.0 ns:Stack.Netstack(David_netstack):trying to allocate comm qubit for pair 0
INFO:1000.0 ns:Stack.Netstack(David_netstack):putting CK request for pair 0
INFO:1000.0 ns:Stack.Netstack(David_netstack):waiting for result for pair 0
INFO:2000.0 ns:Stack.Netstack(David_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=4, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=2000.0)
INFO:2000.0 ns:Stack.Netstack(David_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:2000.0 ns:Stack.Netstack(David_netstack):gen duration (us): 1
INFO:2000.0 ns:Stack.Netstack(Edna_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=3, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=1, time_of_goodness=2000.0)
INFO:2000.0 ns:Stack.Netstack(Edna_netstack):mapping virtual qubit 1 to physical qubit 1
INFO:2000.0 ns:Stack.Netstack(Edna_netstack):gen duration (us): 1
INFO:2000.0 ns:Stack.GenericProcessor(David_processor):
Finished waiting for array slice @0[R5:R6]
INFO:2000.0 ns:Stack.GenericProcessor(Edna_processor):
Finished waiting for array slice @3[R5:R6]
INFO:2000.0 ns:Stack.Netstack(David_netstack):putting CK request to EGP for 1 pairs
INFO:2000.0 ns:Stack.Netstack(David_netstack):splitting request into 1 1-pair requests
INFO:2000.0 ns:Stack.Netstack(David_netstack):trying to allocate comm qubit for pair 0
INFO:2000.0 ns:Stack.Netstack(David_netstack):putting CK request for pair 0
INFO:2000.0 ns:Stack.Netstack(David_netstack):waiting for result for pair 0
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):putting CK request to EGP for 1 pairs
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):qubit IDs specified by application: [0]
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):splitting request into 1 1-pair requests
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):trying to allocate comm qubit for pair 0
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):putting CK request for pair 0
INFO:2000.0 ns:Stack.Netstack(Charlie_netstack):waiting for result for pair 0
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=3, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=3000.0)
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):gen duration (us): 1
INFO:3000.0 ns:Stack.Netstack(David_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=2, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=1, time_of_goodness=3000.0)
INFO:3000.0 ns:Stack.Netstack(David_netstack):mapping virtual qubit 1 to physical qubit 1
INFO:3000.0 ns:Stack.Netstack(David_netstack):gen duration (us): 1
INFO:3000.0 ns:Stack.GenericProcessor(Charlie_processor):
Finished waiting for array slice @0[R5:R6]
INFO:3000.0 ns:Stack.GenericProcessor(David_processor):
Finished waiting for array slice @3[R5:R6]
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):putting CK request to EGP for 1 pairs
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):splitting request into 1 1-pair requests
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):trying to allocate comm qubit for pair 0
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):putting CK request for pair 0
INFO:3000.0 ns:Stack.Netstack(Charlie_netstack):waiting for result for pair 0
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):putting CK request to EGP for 1 pairs
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):qubit IDs specified by application: [0]
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):splitting request into 1 1-pair requests
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):trying to allocate comm qubit for pair 0
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):putting CK request for pair 0
INFO:3000.0 ns:Stack.Netstack(Bob_netstack):waiting for result for pair 0
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=2, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=4000.0)
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):gen duration (us): 1
INFO:4000.0 ns:Stack.Netstack(Charlie_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=1, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=1, time_of_goodness=4000.0)
INFO:4000.0 ns:Stack.Netstack(Charlie_netstack):mapping virtual qubit 1 to physical qubit 1
INFO:4000.0 ns:Stack.Netstack(Charlie_netstack):gen duration (us): 1
INFO:4000.0 ns:Stack.GenericProcessor(Bob_processor):
Finished waiting for array slice @0[R5:R6]
INFO:4000.0 ns:Stack.GenericProcessor(Charlie_processor):
Finished waiting for array slice @3[R5:R6]
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):putting CK request to EGP for 1 pairs
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):splitting request into 1 1-pair requests
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):trying to allocate comm qubit for pair 0
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):putting CK request for pair 0
INFO:4000.0 ns:Stack.Netstack(Bob_netstack):waiting for result for pair 0
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):putting CK request to EGP for 1 pairs
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):qubit IDs specified by application: [0]
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):splitting request into 1 1-pair requests
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):trying to allocate comm qubit for pair 0
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):putting CK request for pair 0
INFO:4000.0 ns:Stack.Netstack(Alice_netstack):waiting for result for pair 0
INFO:5000.0 ns:Stack.Netstack(Alice_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=1, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=5000.0)
INFO:5000.0 ns:Stack.Netstack(Alice_netstack):mapping virtual qubit 0 to physical qubit 0
INFO:5000.0 ns:Stack.Netstack(Alice_netstack):gen duration (us): 1
INFO:5000.0 ns:Stack.Netstack(Bob_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=0, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=1, time_of_goodness=5000.0)
INFO:5000.0 ns:Stack.Netstack(Bob_netstack):mapping virtual qubit 1 to physical qubit 1
INFO:5000.0 ns:Stack.Netstack(Bob_netstack):gen duration (us): 1
INFO:5000.0 ns:Stack.GenericProcessor(Alice_processor):
Finished waiting for array slice @0[R0:R1]
INFO:5000.0 ns:Stack.GenericProcessor(Bob_processor):
Finished waiting for array slice @3[R5:R6]
INFO:5000.0 ns:Stack.Bob program:Bob measures local qubits: 1, 0 and sends results to Charlie
INFO:5000.0 ns:Stack.Charlie program:Charlie receives measurements 10
INFO:5000.0 ns:Stack.Charlie program:Charlie performs entanglement swap
INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 1 @5
   1    () array 1 @6
   2    () set Q0 1
   3    () set Q1 0
   4    () cnot Q0 Q1
   5    () set Q0 1
   6    () h Q0
   7    () set Q0 1
   8    () meas Q0 M0
   9    () qfree Q0
  10    () store M0 @5[0]
  11    () set Q0 0
  12    () meas Q0 M0
  13    () qfree Q0
  14    () store M0 @6[0]
  15    () ret_arr @5
  16    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.Charlie program:Charlie measures local qubits: 1, 1 and sends correction to David
INFO:5000.0 ns:Stack.David program:David receives measurements 1011
INFO:5000.0 ns:Stack.David program:David performs entanglement swap
INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 1 @5
   1    () array 1 @6
   2    () set Q0 1
   3    () set Q1 0
   4    () cnot Q0 Q1
   5    () set Q0 1
   6    () h Q0
   7    () set Q0 1
   8    () meas Q0 M0
   9    () qfree Q0
  10    () store M0 @5[0]
  11    () set Q0 0
  12    () meas Q0 M0
  13    () qfree Q0
  14    () store M0 @6[0]
  15    () ret_arr @5
  16    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.David program:David measures local qubits: 1, 1 and sends correction to Edna
INFO:5000.0 ns:Stack.Edna program:Edna receives measurements 101111
INFO:5000.0 ns:Stack.Edna program:Edna performs entanglement swap
INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing protosubroutine:
ProtoSubroutine
  NetQASM version: (0, 10)
  App ID: 0
 LN | HLN | CMD
   0    () array 1 @5
   1    () array 1 @6
   2    () set Q0 1
   3    () set Q1 0
   4    () cnot Q0 Q1
   5    () set Q0 1
   6    () h Q0
   7    () set Q0 1
   8    () meas Q0 M0
   9    () qfree Q0
  10    () store M0 @5[0]
  11    () set Q0 0
  12    () meas Q0 M0
  13    () qfree Q0
  14    () store M0 @6[0]
  15    () ret_arr @5
  16    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Flushing compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.QnosConnection(graph_state_generation):Commiting compiled subroutine:
Subroutine
NetQASM version: (0, 10)
App ID: 0
 LN | HLN | CMD
   0    () set R0 1
   1    () array R0 @5
   2    () set R0 1
   3    () array R0 @6
   4    () set Q0 1
   5    () set Q1 0
   6    () cnot Q0 Q1
   7    () set Q0 1
   8    () h Q0
   9    () set Q0 1
  10    () meas Q0 M0
  11    () qfree Q0
  12    () set R0 0
  13    () store M0 @5[R0]
  14    () set Q0 0
  15    () meas Q0 M0
  16    () qfree Q0
  17    () set R0 0
  18    () store M0 @6[R0]
  19    () ret_arr @5
  20    () ret_arr @6

INFO:5000.0 ns:Stack.Edna program:Edna measures local qubits: 1, 0 and sends correction to Frank
INFO:5000.0 ns:Stack.Frank program:Frank recieves corrections 10111110
